{
  "version": 4,
  "terraform_version": "1.11.4",
  "serial": 3,
  "lineage": "9d62c9ab-5175-0dd6-9e2e-8cb2ea74f654",
  "outputs": {
    "frontend_url": {
      "value": "http://eventbooking.local",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "all",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/frontend-mvc-deployment",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "0632ec7033c1cb0a0230fee15e5d5d79a0f5af4535419fcc882638522c171d34",
            "live_uid": "3f9db88e-eda7-4911-af7b-cc4c92b36f06",
            "name": "frontend-mvc-deployment",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "3f9db88e-eda7-4911-af7b-cc4c92b36f06",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "# Frontend MVC deployment \napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend-mvc-deployment\nspec:\n  selector:\n    matchLabels:\n      app: frontend-mvc\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: frontend-mvc\n    spec:\n      containers:\n      - name: frontend-mvc\n        image: houssemdocker/frontend-mvc:0.1\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: \"1\"\n            memory: \"200Mi\"\n          requests:\n            cpu: \"0.1\"\n            memory: \"100Mi\"\n        env:\n          - name: ApiGatewayUrl\n            value: http://104.45.20.246\n          - name: CatalogApiUrl\n            value: http://catalog-api-service\n          - name: BasketApiUrl\n            value: http://basket-api-service\n---\n# Frontend MVC service\nkind: Service\napiVersion: v1\nmetadata:\n  name: frontend-mvc-service\nspec:\n  selector:\n    app: frontend-mvc\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 80\n  type: LoadBalancer\n---\n# Catalog API deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalog-api-deployment\nspec:\n  selector:\n    matchLabels:\n      app: catalog-api\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: catalog-api\n    spec:\n      containers:\n      - name: catalog-api\n        image: houssemdocker/catalog-api:0.1\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: \"1\"\n            memory: \"200Mi\"\n          requests:\n            cpu: \"0.1\"\n            memory: \"100Mi\"\n        env:\n          - name: ConnectionStrings__CatalogContext\n            value: \"Server=catalog-mssql-service;Database=CatalogContext;User Id=sa;Password=@Aa123456\"\n---\n# Catalog API sevice\nkind: Service\napiVersion: v1\nmetadata:\n  name: catalog-api-service\nspec:\n  selector:\n    app: catalog-api\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 80\n  type: LoadBalancer\n---\n# Catalog MSSQL database deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: catalog-mssql-deployment\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: catalog-mssql\n  template:\n    metadata:\n      labels:\n        app: catalog-mssql\n    spec:\n      terminationGracePeriodSeconds: 10\n      containers:\n      - name: catalog-mssql\n        image: mcr.microsoft.com/mssql/server:2022-latest\n        resources:\n          limits:\n            cpu: \"2\"\n            memory: \"2Gi\"\n          requests:\n            cpu: \"0.5\"\n        ports:\n        - containerPort: 1433\n        env:\n        - name: ACCEPT_EULA\n          value: \"Y\"\n        - name: SA_PASSWORD\n          value: \"@Aa123456\"\n      #   volumeMounts:\n      #   - name: mssql-persistent-storage\n      #     mountPath: /var/opt/mssql\n      # volumes:\n      # - name: mssql-persistent-storage\n      #   persistentVolumeClaim:\n      #     claimName: mssql-pv-claim\n---\n# Catalog MSSQL database service\napiVersion: v1\nkind: Service\nmetadata:\n  name: catalog-mssql-service\nspec:\n  selector:\n    app: catalog-mssql\n  ports:\n    - protocol: TCP\n      port: 1433\n      targetPort: 1433\n      nodePort: 30200\n  type: NodePort\n---\n# Basket API deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: basket-api-deployment\nspec:\n  selector:\n    matchLabels:\n      app: basket-api\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: basket-api\n    spec:\n      containers:\n      - name: basket-api\n        image: houssemdocker/basket-api:0.1\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: \"1\"\n            memory: \"200Mi\"\n          requests:\n            cpu: \"0.1\"\n            memory: \"100Mi\"\n        env:\n          - name: ConnectionStrings__BasketContext\n            value: \"Server=basket-mssql-service;Database=BasketContext;User Id=sa;Password=@Aa123456\"\n          - name: RedisCacheConnection\n            value: redis-service\n          - name: RabbitMqUri\n            value: amqp://guest:guest@rabbitmq-service//\n---\n# Basket API service\nkind: Service\napiVersion: v1\nmetadata:\n  name: basket-api-service\nspec:\n  selector:\n    app: basket-api\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 80\n  type: LoadBalancer\n---\n# Basket MSSQL database deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: basket-mssql-deployment\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: basket-mssql\n  template:\n    metadata:\n      labels:\n        app: basket-mssql\n    spec:\n      terminationGracePeriodSeconds: 10\n      containers:\n      - name: basket-mssql\n        image: mcr.microsoft.com/mssql/server:2022-latest\n        resources:\n          limits:\n            cpu: \"2\"\n            memory: \"2Gi\"\n          requests:\n            cpu: \"0.5\"\n        ports:\n          - containerPort: 1433\n        env:\n          - name: ACCEPT_EULA\n            value: \"Y\"\n          - name: SA_PASSWORD\n            value: \"@Aa123456\"\n      #   volumeMounts:\n      #   - name: mssql-persistent-storage\n      #     mountPath: /var/opt/mssql\n      # volumes:\n      # - name: mssql-persistent-storage\n      #   persistentVolumeClaim:\n      #     claimName: mssql-pv-claim\n---\n# Basket MSSQL database service\napiVersion: v1\nkind: Service\nmetadata:\n  name: basket-mssql-service\nspec:\n  selector:\n    app: basket-mssql\n  ports:\n    - protocol: TCP\n      port: 1433\n      targetPort: 1433\n      nodePort: 30300\n  type: NodePort\n---\n# RabbitMQ deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: rabbitmq-deployment\nspec:\n  selector:\n    matchLabels:\n      app: rabbitmq\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: rabbitmq\n    spec:\n      containers:\n      - name: rabbitmq\n        image: rabbitmq:3-management\n        ports:\n        - containerPort: 5672\n---\n# RabbitMQ sevice\nkind: Service\napiVersion: v1\nmetadata:\n  name: rabbitmq-service\nspec:\n  selector:\n    app: rabbitmq\n  ports:\n  - protocol: TCP\n    port: 5672\n    #targetPort: 5672\n    #nodePort: 30672\n  type: ClusterIP\n---\n# RabbitMQ Management sevice\nkind: Service\napiVersion: v1\nmetadata:\n  name: rabbitmq-management-service\nspec:\n  selector:\n    app: rabbitmq\n  ports:\n  - protocol: TCP\n    port: 15672\n    targetPort: 15672\n  type: LoadBalancer\n---\n# Orders WebJob deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: orders-webjob-deployment\nspec:\n  selector:\n    matchLabels:\n      app: orders-webjob\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: orders-webjob\n    spec:\n      containers:\n      - name: orders-webjob\n        image: houssemdocker/orders-webjob:0.1\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 80\n        env:\n          - name: RabbitMqUri\n            value: amqp://guest:guest@rabbitmq-service//\n---\n# Orders WebJob service\nkind: Service\napiVersion: v1\nmetadata:\n  name: orders-webjob-service\nspec:\n  selector:\n    app: orders-webjob\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 80\n    nodePort: 30080\n  type: NodePort\n---\n# Prometheus deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: prometheus-deployment\nspec:\n  selector:\n    matchLabels:\n      app: prometheus\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: prometheus\n    spec:\n      containers:\n      - name: prometheus\n        image: prom/prometheus\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 9090\n---\n# Prometheus service\nkind: Service\napiVersion: v1\nmetadata:\n  name: prometheus-service\nspec:\n  selector:\n    app: prometheus\n  ports:\n  - protocol: TCP\n    port: 9090\n    targetPort: 9090\n  type: LoadBalancer\n---\n# Grafana deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: grafana-deployment\nspec:\n  selector:\n    matchLabels:\n      app: grafana\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: grafana\n    spec:\n      containers:\n      - name: grafana\n        image: grafana/grafana\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 3000\n---\n# Grafana service\nkind: Service\napiVersion: v1\nmetadata:\n  name: grafana-service\nspec:\n  selector:\n    app: grafana\n  ports:\n  - protocol: TCP\n    port: 3000\n    targetPort: 3000\n  type: LoadBalancer\n---\n# Konga deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: konga-deployment\nspec:\n  selector:\n    matchLabels:\n      app: konga\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: konga\n    spec:\n      containers:\n      - name: konga\n        image: pantsel/konga\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 1337\n        env:\n          - name: NODE_TLS_REJECT_UNAUTHORIZED # so that Konga can connect on kong's https.\n            value: \"0\"\n---\n# Konga service\nkind: Service\napiVersion: v1\nmetadata:\n  name: konga-service\nspec:\n  selector:\n    app: konga\n  ports:\n  - protocol: TCP\n    port: 1337\n    targetPort: 1337\n  type: LoadBalancer\n---\n# Redis deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-deployment\nspec:\n  selector:\n    matchLabels:\n      app: redis\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n    spec:\n      containers:\n      - name: redis\n        image: redis:5.0.3\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 6379\n---\n# Redis service\nkind: Service\napiVersion: v1\nmetadata:\n  name: redis-service\nspec:\n  selector:\n    app: redis\n  ports:\n  - protocol: TCP\n    port: 6379\n    targetPort: 6379\n  type: LoadBalancer\n\n\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: eventbooking-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: nginx\n  rules:\n    - host: eventbooking.local\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: frontend-mvc-service\n                port:\n                  number: 80\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend-mvc-deployment\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: frontend-mvc\n  template:\n    metadata:\n      labels:\n        app: frontend-mvc\n    spec:\n      containers:\n      - env:\n        - name: ApiGatewayUrl\n          value: http://104.45.20.246\n        - name: CatalogApiUrl\n          value: http://catalog-api-service\n        - name: BasketApiUrl\n          value: http://basket-api-service\n        image: houssemdocker/frontend-mvc:0.1\n        imagePullPolicy: Always\n        name: frontend-mvc\n        ports:\n        - containerPort: 80\n        resources:\n          limits:\n            cpu: \"1\"\n            memory: 200Mi\n          requests:\n            cpu: \"0.1\"\n            memory: 100Mi\n",
            "yaml_incluster": "0632ec7033c1cb0a0230fee15e5d5d79a0f5af4535419fcc882638522c171d34"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
